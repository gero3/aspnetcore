<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <Description>Components feature for ASP.NET Core.</Description>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IsAspNetCoreApp>true</IsAspNetCoreApp>
    <Nullable>enable</Nullable>
    <IsTrimmable>true</IsTrimmable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DefineConstants>$(DefineConstants);COMPONENTS</DefineConstants>
    <!-- TODO: Address Native AOT analyzer warnings https://github.com/dotnet/aspnetcore/issues/45473 -->
    <EnableAOTAnalyzer>false</EnableAOTAnalyzer>
    <RoutingSourceRoot>$(RepoRoot)\src\Http\Routing\src\</RoutingSourceRoot>
    <RoutingAbstractionsSourceRoot>$(RepoRoot)\src\Http\Routing.Abstractions\src\</RoutingAbstractionsSourceRoot>
    <HttpAbstractionsSourceRoot>$(RepoRoot)\src\Http\Http.Abstractions\src\</HttpAbstractionsSourceRoot>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="$(ComponentsSharedSourceRoot)src\ArrayBuilder.cs" LinkBase="RenderTree" />
    <Compile Include="$(ComponentsSharedSourceRoot)src\JsonSerializerOptionsProvider.cs" />
    <Compile Include="$(SharedSourceRoot)LinkerFlags.cs" LinkBase="Shared" />
    <Compile Include="$(SharedSourceRoot)QueryStringEnumerable.cs" LinkBase="Shared" />
  </ItemGroup>

  <ItemGroup Label="Routing">
    <!-- Abstractions -->
    <Compile Include="$(HttpAbstractionsSourceRoot)Routing\RouteValueDictionary.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingAbstractionsSourceRoot)IRouteConstraint.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingAbstractionsSourceRoot)IParameterPolicy.cs" LinkBase="Routing" />

    <!-- Abstractions -->    
    <Compile Include="$(SharedSourceRoot)RouteValueDictionaryTrimmerWarning.cs" LinkBase="Reflection" />
    <Compile Include="$(SharedSourceRoot)UrlDecoder\UrlDecoder.cs" LinkBase="Routing" />

    <!-- Infrastructure -->
    <Compile Include="$(RoutingSourceRoot)RouteValueEqualityComparer.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)RouteCreationException.cs" LinkBase="Routing" />
    <!-- Tree router for matching -->
    <Compile Include="$(RoutingSourceRoot)PathTokenizer.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)Tree\*.cs" LinkBase="Routing\Tree" />
    <Compile Remove="$(RoutingSourceRoot)Tree\Outbound*.cs" LinkBase="Routing\Tree" />
    <Compile Remove="$(RoutingSourceRoot)Tree\LinkGeneration*.cs" LinkBase="Routing\Tree" />
    <!-- Route patterns -->
    <Compile Include="$(RoutingSourceRoot)Template\RoutePrecedence.cs" LinkBase="Routing\Patterns" />
    <Compile Include="$(RoutingSourceRoot)Patterns\*.cs" LinkBase="Routing\Patterns" />
    <Compile Remove="$(RoutingSourceRoot)Patterns\*RoutePatternTransformer.cs" />
    <!-- Route constraints -->
    <Compile Include="$(RoutingSourceRoot)DefaultInlineConstraintResolver.cs" LinkBase="Routing" />    
    <Compile Include="$(RoutingSourceRoot)ParameterPolicyActivator.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)RouteConstraintBuilder.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)RouteConstraintMatcher.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)RouteOptions.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)IInlineConstraintResolver.cs" LinkBase="Routing" />
    <Compile Include="$(RoutingSourceRoot)Constraints\**\*.cs" LinkBase="Routing\Constraints" />
    <Compile Remove="$(RoutingSourceRoot)Constraints\HttpMethodRouteConstraint.cs" />
    <Compile Remove="$(RoutingSourceRoot)Constraints\RegexErrorStubRouteConstraint.cs" />
    <Compile Remove="$(RoutingSourceRoot)Constraints\RequiredRouteConstraint.cs" />
    <Compile Remove="$(RoutingSourceRoot)Constraints\StringRouteConstraint.cs" />
    
  </ItemGroup>
  
  <ItemGroup>
    <Reference Include="Microsoft.Extensions.Logging.Abstractions" />
    <Reference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
  </ItemGroup>

  <!--
    These references exist only in the .nuspec files and baseline checks are not aware of them. Keep suppressions
    in sync with the two .nuspec files:
    - Anytime a reference is added to this project file, remove its suppression.
    - Remove InNuspecFile attributes of references removed from the .nuspec files. Make suppression conditional on
      Major.Minor during previews. After RTM (and baseline updates), remove suppressions entirely.
  -->
  <ItemGroup>
    <SuppressBaselineReference Include="Microsoft.AspNetCore.Components.Analyzers" InNuspecFile="true" />
    <SuppressBaselineReference Include="Microsoft.AspNetCore.Authorization" InNuspecFile="true" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Properties\ILLink.Substitutions.xml" LogicalName="ILLink.Substitutions.xml" />
  </ItemGroup>

  <Target Name="_GetNuspecDependencyPackageVersions">
    <MSBuild Targets="_GetPackageVersionInfo"
        BuildInParallel="$(BuildInParallel)"
        Projects="
          ../../Analyzers/src/Microsoft.AspNetCore.Components.Analyzers.csproj;
          ../../../Security/Authorization/Core/src/Microsoft.AspNetCore.Authorization.csproj">
      <Output TaskParameter="TargetOutputs" ItemName="_ProjectPathWithVersion" />
    </MSBuild>
    <ItemGroup>
      <NuspecProperty Include="@(_ProjectPathWithVersion->WithMetadataValue('PackageId', 'Microsoft.AspnetCore.Components.Analyzers')->'componentAnalyzerVersion=%(PackageVersion)')" />
      <NuspecProperty Include="@(_ProjectPathWithVersion->WithMetadataValue('PackageId', 'Microsoft.AspnetCore.Authorization')->'authorizationVersion=%(PackageVersion)')" />
    </ItemGroup>
  </Target>

  <!-- Pack settings -->
  <PropertyGroup>
    <NuspecFile>Microsoft.AspNetCore.Components.netcoreapp.nuspec</NuspecFile>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);_GetNuspecDependencyPackageVersions</GenerateNuspecDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <NuspecProperty Condition="'$(DotNetBuildFromSource)' != 'true'" Include="systemComponentModelAnnotationsVersion=$(SystemComponentModelAnnotationsVersion)" />
    <NuspecProperty Include="AssemblyName=$(AssemblyName)" />
    <NuspecProperty Include="DefaultNetCoreTargetFramework=$(DefaultNetCoreTargetFramework)" />
    <NuspecProperty Include="OutputPath=$(OutputPath)" />
    <NuspecProperty Include="PackageThirdPartyNoticesFile=$(PackageThirdPartyNoticesFile)" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Web" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Blazor.Build.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Authorization.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Forms.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Performance" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Server.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Endpoints.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.Web.Tests" />
    <InternalsVisibleTo Include="Microsoft.AspNetCore.Components.ProtectedBrowserStorage.Tests" />
    <InternalsVisibleTo Include="Components.TestServer" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" Key="$(MoqPublicKey)" />
  </ItemGroup>
</Project>
